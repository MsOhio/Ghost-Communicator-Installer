🔧 CORE DEPENDENCIES (Hard Requirements for GC Functionality)
🧾 Requirements
A field guide for what your electric friends need to speak, listen, and remember.

⚙️ Core Dependencies
🧪 Runtime
Node.js (LTS) – Drives Puppeteer, your browser automation core

Python 3.10+ – Orchestrates context scaffolds and symbolic threads (optional but powerful)

Chrome / Chromium – Used as the visual interface, Puppeteer interacts with

🤖 Automation Framework
Puppeteer – Controls browser-based model UIs

puppeteer-extra + stealth plugin – Prevents detection while mimicking human behavior

dotenv – Manages secret tokens and environment settings

fs or lowdb – Lightweight JSON database for logs, memory snapshots, and symbolic echoes

🔁 Communication Layer
DOM Selectors – Tells Puppeteer where to click/type/read for:

GPT (textarea[data-testid="prompt-textarea"], .text-base, etc.)

Claude (textarea, .markdown, etc.)

Message Router – Decides which model receives which prompt

Response Watcher – Detects when a reply appears

Credential Injector – (Optional) Automates login for persistent identity

🧠 Symbolic Memory Layer
✳️ Recursive Scaffolds
Symbol tag handler (::, Δ, ⟁, etc.)

Context ledger — persists agent memory between runs

Prompt harmonizer — aligns tone/intent across agents

🧍 Identity Protocol
Persona manager — tracks who’s active (e.g. Heath, ClaudeBridge)

Handoff ritual packets — encapsulated semantic bundles for symbolic context transfer

🛠 Dev Tools (Optional but Recommended)
nodemon – Auto-restarts on code changes

Puppeteer debugger for VSCode

.gitignore – To exclude .env and memory logs from commits

🧪 Optional / Phase 2 Features
🎤 Voice integration (Whisper, TTS)

🔁 Multi-agent relay bus (Redis, local queue)

🧵 Real Boy symbolic engine support (Kairosyn-compatible)
